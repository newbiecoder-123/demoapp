Sub ticker_exercise()

'Create a loop to go through the worksheets in the workbook
Dim ws As Worksheet
'Start loop
For Each ws In Worksheets

ws.Activate

'assign variable characteristics
Dim ticker_name As String
Dim yearly_change As Double
Dim year_open As Double
Dim year_close As Double
Dim percent_change As Double
Dim total_stock_volume As Double

'label all the variables
'these labels will go into each sheet
ws.Range("i1").Value = "Ticker"
ws.Range("j1").Value = "Yearly Change"
ws.Range("k1").Value = "Percent Change"
ws.Range("l1").Value = "Total Stock Volume"

'set the total stock volume to 0 to start counting
total_stock_volume = 0

'capture the opening stock price
year_open = ws.Cells(2, 3).Value

'start at row 2 for summary table (from previous VBA class exercise)
Dim summary_table_row As Integer
summary_table_row = 2

'find the last row in the sheet
lastrow = ws.Cells(Rows.Count, 1).End(xlUp).Row

'main code for the analysis
'generate a for loop to run through each ticker

For i = 2 To lastrow
    
    'Cannot place any code after 'Then' or there will be an error
    If ws.Cells(i + 1, 1).Value <> ws.Cells(i, 1).Value Then
   
        ticker_name = ws.Cells(i, 1).Value
        Range("I" & summary_table_row).Value = ticker_name
       
        total_stock_volume = total_stock_volume + ws.Cells(i, 7).Value
        Range("L" & summary_table_row).Value = total_stock_volume
   
        year_close = ws.Cells(i, 6).Value 'grab the ending stock price
        yearly_change = year_close - year_open
        Range("J" & summary_table_row).Value = yearly_change
       
        'percent change contingent on opening price
        
        If year_open <> 0 Then
            percent_change = (year_close - year_open) / year_open
        ElseIf year_open = 0 Then
            percent_change = 0
        End If
        Range("K" & summary_table_row).Value = percent_change
        Range("K" & summary_table_row).NumberFormat = "0.00%"
           
       'reset totals and add to summary table row to start counting next ticker
       summary_table_row = summary_table_row + 1
       total_stock_volume = 0
       year_open = ws.Cells(i + 1, 3) 'this is important to start grabbing the first opening stock price
   
    Else
        total_stock_volume = total_stock_volume + ws.Cells(i, 7).Value
    End If

Next i

'creating a color scheme for yearly change in stock price
For i = 2 To lastrow
    For j = 10 To 10 'keep the column to one column
        If ws.Cells(i, j).Value > 0 Then
        ws.Cells(i, 10).Interior.ColorIndex = 4
        ElseIf Cells(i, 10).Value < 0 Then
        ws.Cells(i, 10).Interior.ColorIndex = 3
        End If
    Next j
Next i

'Label the summary table to finding the best and worst stocks
ws.Cells(2, 15).Value = "Greatest % Increase"
ws.Cells(3, 15).Value = "Greatest % Decrease"
ws.Cells(4, 15).Value = "Greatest Total Volume"
ws.Cells(1, 16).Value = "Ticker"
ws.Cells(1, 17).Value = "Value"

Dim best_stock As String
Dim best_stock_number As Double
Dim worst_stock As String
Dim worst_stock_number As Double
Dim most_volume_stock As String
Dim most_volume_number As Double

'create placeholders for best and wort stocks
best_stock_number = ws.Cells(2, 11).Value
worst_stock_number = ws.Cells(2, 11).Value
most_volume_number = ws.Cells(2, 12).Value

'loop through the totals to compare results to generate the best and worst stocks
For j = 2 To lastrow

    'calculate the best stock by looping through the column
    If ws.Cells(j, 11).Value > best_stock_number Then
        best_stock_number = ws.Cells(j, 11).Value
        ws.Cells(2, 17).Value = best_stock_number
        ws.Cells(2, 17).NumberFormat = "0.00%"
        
        best_stock = ws.Cells(j, 9).Value
        ws.Cells(2, 16).Value = best_stock
        
    End If
    
    'calculate the worst stock by looping through the column
    If ws.Cells(j, 11).Value < worst_stock_number Then
        worst_stock_number = ws.Cells(j, 11).Value
        ws.Cells(3, 17).Value = worst_stock_number
        ws.Cells(3, 17).NumberFormat = "0.00%"
                
        worst_stock = ws.Cells(j, 9).Value
        ws.Cells(3, 16).Value = worst_stock
    End If
    
    'calculate the stock with the most volume by looping through the column
    If ws.Cells(j, 12).Value > most_volume_number Then
        most_volume_number = ws.Cells(j, 12).Value
        ws.Cells(4, 17).Value = most_volume_number
        
        most_volume_stock = ws.Cells(j, 9).Value
        ws.Cells(4, 16).Value = most_volume_stock
    End If
    
Next j

Next ws
   
End Sub

